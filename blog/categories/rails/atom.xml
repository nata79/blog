<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Nata, the explorer]]></title>
  <link href="http://nata79.github.com/Blog/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://nata79.github.com/Blog/"/>
  <updated>2013-02-09T23:32:51+00:00</updated>
  <id>http://nata79.github.com/Blog/</id>
  <author>
    <name><![CDATA[André Barbosa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deploying a Rails app to AppFog]]></title>
    <link href="http://nata79.github.com/Blog/blog/2012/10/19/deploying-a-rails-app-to-appfog/"/>
    <updated>2012-10-19T22:02:00+01:00</updated>
    <id>http://nata79.github.com/Blog/blog/2012/10/19/deploying-a-rails-app-to-appfog</id>
    <content type="html"><![CDATA[<p><a href="http://www.appfog.com/">AppFog</a> is a PaaS similar to <a href="http://www.heroku.com/">Heroku</a> only cheaper. You can have 2GB of RAM for your app for free, which is perfect for small projects.</p>

<p>I won’t go into great detail on what the steps are to deploy your rails app because the folks at AppFog already did that for me. You should check out their documentation at <a href="http://docs.appfog.com">http://docs.appfog.com</a>.</p>

<p>There is just one little thing that I didn’t get from the documentation and took me a while to understand, the content of my <code>database.yml</code> file. AppFog gives you a way to access installed services information (like your database) through an environment variable. In ruby you would access them like this `ENV['VCAP_SERVICES']. This will return an hash with information on all your installed services. You have to use this hash to setup your database.yml file.</p>

<p>So, the production section in your database.yml file should look something like this:</p>

<pre><code>production:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: &lt;%= JSON.parse( ENV['VCAP_SERVICES'] )['postgres'].first['credentials']['hostname'] rescue 'localhost' %&gt;
  port: &lt;%= JSON.parse( ENV['VCAP_SERVICES'] )['postgres'].first['credentials']['port'] rescue 3306 %&gt;
  database: &lt;%= JSON.parse( ENV['VCAP_SERVICES'] )['postgres'].first['credentials']['name'] rescue '' %&gt;
  username: &lt;%= JSON.parse( ENV['VCAP_SERVICES'] )['postgres'].first['credentials']['username'] rescue '' %&gt;
  password: &lt;%= JSON.parse( ENV['VCAP_SERVICES'] )['postgres'].first['credentials']['password'] rescue '' %&gt;
</code></pre>

<p>this example uses Postgres but you can easily modify it for your favorite database engine.</p>
]]></content>
  </entry>
  
</feed>
